<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Add support for component scanning -->
	<context:component-scan base-package="com.example.demo.model" />

	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

    <!-- Step 1: Define Database DataSource / connection pool -->
	<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          destroy-method="close">
        <property name="driverClass" value="org.h2.Driver" />
		<property name="connection.url" value="jdbc:h2:mem:test" />
		<property name="connection.username" value="sa" />
		<property name="connection.password" value="" />

        <!-- these are connection pool properties for C3P0 -->
		<property name="connection.pool_size" value="1" />
		<!-- Select our SQL dialect -->
		<property name="dialect" value="org.hibernate.dialect.H2Dialect" />
		<!-- Echo the SQL to stdout -->
		<property name="show_sql" value="true" />
		<!-- Set the current session context -->
		<property name="current_session_context_class" value="thread" />
		<!-- Drop and re-create the database schema on startup -->
		<property name="hbm2ddl.auto" value="create-drop" />
		<!-- dbcp connection pool configuration -->
		<property name="hibernate.dbcp.initialSize" value="5" />
		<property name="hibernate.dbcp.maxTotal" value="20" />
		<property name="hibernate.dbcp.maxIdle" value="10" />
		<property name="hibernate.dbcp.minIdle" value="5" />
		<property name="hibernate.dbcp.maxWaitMillis" value="-1" />
	</bean>  
	
    <!-- Step 2: Setup Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="configLocation">
			<value>file:src/hibernate.cfg.xml</value>
		</property>
		<property name="packagesToScan" value="com.example.demo" />

   </bean>	  

    <!-- Step 3: Setup Hibernate transaction manager -->
	<bean id="myTransactionManager"
            class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="myTransactionManager" />

</beans>











